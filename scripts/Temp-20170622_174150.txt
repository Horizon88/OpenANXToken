Welcome to the Geth JavaScript console!

instance: Geth/v1.6.5-stable-cf87713d/darwin-amd64/go1.8.3
coinbase: 0xf8b8de9241af1a69eca7b404ee988a6cdfdf98b8
at block: 3912079 (Thu, 22 Jun 2017 17:41:27 AEST)
 datadir: /Users/bok/Library/Ethereum
 modules: admin:1.0 debug:1.0 eth:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0

> 
> 
undefined
> 
undefined
> 
undefined
> 
undefined
> 
> 
... 
...... 
undefined
> 
undefined
> 
> 
undefined
> 
undefined
> 
undefined
> 
undefined
> 
MAIN: token.address=0x701c244b988a513c945973defa05de933b23fe1d
undefined
> 
MAIN: token.lockedTokensAddress=0x3866259bc60e5b69d5c438db238d3b4c9db37bcb
undefined
> 
undefined
> 
MAIN: currentTime=1498117311.299 Thu, 22 Jun 2017 07:41:51 UTC / Thu, 22 Jun 2017 07:41:51 GMT
undefined
> 
undefined
> 
MAIN: token.START_DATE=1498136400 Thu, 22 Jun 2017 13:00:00 UTC / Thu, 22 Jun 2017 13:00:00 GMT
undefined
> 
undefined
> 
MAIN: token.END_DATE=1500728400 Sat, 22 Jul 2017 13:00:00 UTC / Sat, 22 Jul 2017 13:00:00 GMT
undefined
> 
MAIN: token.symbol=OAX
undefined
> 
MAIN: token.name=openANX Token
undefined
> 
MAIN: token.decimals=18
undefined
> 
MAIN: token.DECIMALSFACTOR=1000000000000000000
undefined
> 
MAIN: token.TOKENS_SOFT_CAP=13000000
undefined
> 
MAIN: token.TOKENS_HARD_CAP=30000000
undefined
> 
MAIN: token.TOKENS_TOTAL=100000000
undefined
> 
MAIN: token.finalised=false
undefined
> 
MAIN: token.tokensPerKEther=478680
undefined
> 
MAIN: token.totalSupply=0
undefined
> 
MAIN: token.totalSupplyLocked(1Y/2Y)=0 / 0
undefined
> 
MAIN: token.totalSupplyLocked=0
undefined
> 
MAIN: token.totalSupplyUnlocked=0
undefined
> 
undefined
> 
MAIN: token.LOCKED_1Y_DATE=1529672400 Fri, 22 Jun 2018 13:00:00 UTC / Fri, 22 Jun 2018 13:00:00 GMT
undefined
> 
undefined
> 
MAIN: token.LOCKED_2Y_DATE=1561208400 Sat, 22 Jun 2019 13:00:00 UTC / Sat, 22 Jun 2019 13:00:00 GMT
undefined
> 
MAIN: lockedToken.TOKENS_LOCKED_1Y_TOTAL=14000000
undefined
> 
MAIN: lockedToken.TOKENS_LOCKED_2Y_TOTAL=26000000
undefined
> 
MAIN: lockedToken.totalSupplyLocked1Y=14000000
undefined
> 
MAIN: lockedToken.totalSupplyLocked2Y=26000000
undefined
> 
MAIN: lockedToken.totalSupplyLocked=40000000
undefined
> 
MAIN: token.owner=0xa0c81e7bca6b95b6cb1d6d4e5db744228ed6f5c1
undefined
> 
MAIN: token.newOwner=0x0000000000000000000000000000000000000000
undefined
> 
> 
undefined
> 
undefined
> 
> 
undefined
> 
0
> 
...... 
...... 
{
  callbacks: [function(error, result)],
  filterId: "0xb7bd1f681db104e7a12e6aae38e23d03",
  getLogsCallbacks: [],
  implementation: {
    getLogs: function(),
    newFilter: function(),
    poll: function(),
    uninstallFilter: function()
  },
  options: {
    address: "0x701c244b988a513c945973defa05de933b23fe1d",
    from: undefined,
    fromBlock: "0x3ba553",
    to: undefined,
    toBlock: "0x3bb18f",
    topics: ["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0", null, null]
  },
  pollFilters: [],
  requestManager: {
    polls: {
      0xb7bd1f681db104e7a12e6aae38e23d03: {
        data: {...},
        id: "0xb7bd1f681db104e7a12e6aae38e23d03",
        callback: function(error, messages),
        uninstall: function()
      }
    },
    provider: {
      newAccount: function(),
      send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sign: function(),
      unlockAccount: function()
    },
    timeout: {},
    poll: function(),
    reset: function(keepIsSyncing),
    send: function(data),
    sendAsync: function(data, callback),
    sendBatch: function(data, callback),
    setProvider: function(p),
    startPolling: function(data, pollId, callback, uninstall),
    stopPolling: function(pollId)
  },
  formatter: function(),
  get: function(callback),
  stopWatching: function(callback),
  watch: function(callback)
}
> 
> 
undefined
> 
0
> 
...... 
...... 
MAIN: TokensPerKEtherUpdated Event 0: tokensPerKEther=478680 block=3910899
{
  callbacks: [function(error, result)],
  filterId: "0xca5a6d6eb4973d466b4c858ceb605c71",
  getLogsCallbacks: [],
  implementation: {
    getLogs: function(),
    newFilter: function(),
    poll: function(),
    uninstallFilter: function()
  },
  options: {
    address: "0x701c244b988a513c945973defa05de933b23fe1d",
    from: undefined,
    fromBlock: "0x3ba553",
    to: undefined,
    toBlock: "0x3bb18f",
    topics: ["0xee386bebbe46d39825c2b93313aa1ab1dc57d4774cac81c6debb8c611c9227ab"]
  },
  pollFilters: [],
  requestManager: {
    polls: {
      0xb7bd1f681db104e7a12e6aae38e23d03: {
        data: {...},
        id: "0xb7bd1f681db104e7a12e6aae38e23d03",
        callback: function(error, messages),
        uninstall: function()
      },
      0xca5a6d6eb4973d466b4c858ceb605c71: {
        data: {...},
        id: "0xca5a6d6eb4973d466b4c858ceb605c71",
        callback: function(error, messages),
        uninstall: function()
      }
    },
    provider: {
      newAccount: function(),
      send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sign: function(),
      unlockAccount: function()
    },
    timeout: {},
    poll: function(),
    reset: function(keepIsSyncing),
    send: function(data),
    sendAsync: function(data, callback),
    sendBatch: function(data, callback),
    setProvider: function(p),
    startPolling: function(data, pollId, callback, uninstall),
    stopPolling: function(pollId)
  },
  formatter: function(),
  get: function(callback),
  stopWatching: function(callback),
  watch: function(callback)
}
> 
true
> 
> 
undefined
> 
0
> 
...... 
...... 
{
  callbacks: [function(error, result)],
  filterId: "0x6a04061dcafc1592a5eae81ed54d4373",
  getLogsCallbacks: [],
  implementation: {
    getLogs: function(),
    newFilter: function(),
    poll: function(),
    uninstallFilter: function()
  },
  options: {
    address: "0x701c244b988a513c945973defa05de933b23fe1d",
    from: undefined,
    fromBlock: "0x3ba553",
    to: undefined,
    toBlock: "0x3bb18f",
    topics: ["0x4edbfac5b40fe46ac1af1fd222b224b38cfeeb9e21bd4fc6344526c245f7549b"]
  },
  pollFilters: [],
  requestManager: {
    polls: {
      0x6a04061dcafc1592a5eae81ed54d4373: {
        data: {...},
        id: "0x6a04061dcafc1592a5eae81ed54d4373",
        callback: function(error, messages),
        uninstall: function()
      },
      0xb7bd1f681db104e7a12e6aae38e23d03: {
        data: {...},
        id: "0xb7bd1f681db104e7a12e6aae38e23d03",
        callback: function(error, messages),
        uninstall: function()
      }
    },
    provider: {
      newAccount: function(),
      send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sign: function(),
      unlockAccount: function()
    },
    timeout: {},
    poll: function(),
    reset: function(keepIsSyncing),
    send: function(data),
    sendAsync: function(data, callback),
    sendBatch: function(data, callback),
    setProvider: function(p),
    startPolling: function(data, pollId, callback, uninstall),
    stopPolling: function(pollId)
  },
  formatter: function(),
  get: function(callback),
  stopWatching: function(callback),
  watch: function(callback)
}
> 
true
> 
> 
undefined
> 
0
> 
undefined
> 
TOKENSBOUGHT: No	Buyer	Ethers	EtherBalance	Tokens	TokenBalance	TokensPerKEther	Block	TxIndex	TxHash
undefined
> 
...... 
...... 
......... 
......... 
...... 
{
  callbacks: [function(error, result)],
  filterId: "0xfa0a383e25d9ba3a269557882aedd502",
  getLogsCallbacks: [],
  implementation: {
    getLogs: function(),
    newFilter: function(),
    poll: function(),
    uninstallFilter: function()
  },
  options: {
    address: "0x701c244b988a513c945973defa05de933b23fe1d",
    from: undefined,
    fromBlock: "0x3ba553",
    to: undefined,
    toBlock: "0x3bb18f",
    topics: ["0x6a7381bdc8f4e7ed3c0f0c299382777bde88a65f0c27f670235401d154454630", null]
  },
  pollFilters: [],
  requestManager: {
    polls: {
      0xb7bd1f681db104e7a12e6aae38e23d03: {
        data: {...},
        id: "0xb7bd1f681db104e7a12e6aae38e23d03",
        callback: function(error, messages),
        uninstall: function()
      },
      0xfa0a383e25d9ba3a269557882aedd502: {
        data: {...},
        id: "0xfa0a383e25d9ba3a269557882aedd502",
        callback: function(error, messages),
        uninstall: function()
      }
    },
    provider: {
      newAccount: function(),
      send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sign: function(),
      unlockAccount: function()
    },
    timeout: {},
    poll: function(),
    reset: function(keepIsSyncing),
    send: function(data),
    sendAsync: function(data, callback),
    sendBatch: function(data, callback),
    setProvider: function(p),
    startPolling: function(data, pollId, callback, uninstall),
    stopPolling: function(pollId)
  },
  formatter: function(),
  get: function(callback),
  stopWatching: function(callback),
  watch: function(callback)
}
> 
true
> 
> 
undefined
> 
0
> 
...... 
...... 
{
  callbacks: [function(error, result)],
  filterId: "0x51fdea623dc27dc9dd6966bffb83e3d8",
  getLogsCallbacks: [],
  implementation: {
    getLogs: function(),
    newFilter: function(),
    poll: function(),
    uninstallFilter: function()
  },
  options: {
    address: "0x701c244b988a513c945973defa05de933b23fe1d",
    from: undefined,
    fromBlock: "0x3ba553",
    to: undefined,
    toBlock: "0x3bb18f",
    topics: ["0xb3e6054663369578ee4831fc6c8ee9486db04e6f78b939250094785f6b6a430b", null]
  },
  pollFilters: [],
  requestManager: {
    polls: {
      0x51fdea623dc27dc9dd6966bffb83e3d8: {
        data: {...},
        id: "0x51fdea623dc27dc9dd6966bffb83e3d8",
        callback: function(error, messages),
        uninstall: function()
      },
      0xb7bd1f681db104e7a12e6aae38e23d03: {
        data: {...},
        id: "0xb7bd1f681db104e7a12e6aae38e23d03",
        callback: function(error, messages),
        uninstall: function()
      }
    },
    provider: {
      newAccount: function(),
      send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sign: function(),
      unlockAccount: function()
    },
    timeout: {},
    poll: function(),
    reset: function(keepIsSyncing),
    send: function(data),
    sendAsync: function(data, callback),
    sendBatch: function(data, callback),
    setProvider: function(p),
    startPolling: function(data, pollId, callback, uninstall),
    stopPolling: function(pollId)
  },
  formatter: function(),
  get: function(callback),
  stopWatching: function(callback),
  watch: function(callback)
}
> 
true
> 
> 
undefined
> 
0
> 
...... 
......... 
...... 
{
  callbacks: [function(error, result)],
  filterId: "0xc55515bf66c10421112f97fa6954f849",
  getLogsCallbacks: [],
  implementation: {
    getLogs: function(),
    newFilter: function(),
    poll: function(),
    uninstallFilter: function()
  },
  options: {
    address: "0x701c244b988a513c945973defa05de933b23fe1d",
    from: undefined,
    fromBlock: "0x3ba553",
    to: undefined,
    toBlock: "0x3bb18f",
    topics: ["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", null, null]
  },
  pollFilters: [],
  requestManager: {
    polls: {
      0xb7bd1f681db104e7a12e6aae38e23d03: {
        data: {...},
        id: "0xb7bd1f681db104e7a12e6aae38e23d03",
        callback: function(error, messages),
        uninstall: function()
      },
      0xc55515bf66c10421112f97fa6954f849: {
        data: {...},
        id: "0xc55515bf66c10421112f97fa6954f849",
        callback: function(error, messages),
        uninstall: function()
      }
    },
    provider: {
      newAccount: function(),
      send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sign: function(),
      unlockAccount: function()
    },
    timeout: {},
    poll: function(),
    reset: function(keepIsSyncing),
    send: function(data),
    sendAsync: function(data, callback),
    sendBatch: function(data, callback),
    setProvider: function(p),
    startPolling: function(data, pollId, callback, uninstall),
    stopPolling: function(pollId)
  },
  formatter: function(),
  get: function(callback),
  stopWatching: function(callback),
  watch: function(callback)
}
> 
true
> 
> 
undefined
> 
0
> 
TRANSFER: No	From	To	Tokens	Block	TxIndex	TxHash
undefined
> 
...... 
...... 
......... 
...... 
{
  callbacks: [function(error, result)],
  filterId: "0xe44a4b83cdf405188952e5a8f6c4250b",
  getLogsCallbacks: [],
  implementation: {
    getLogs: function(),
    newFilter: function(),
    poll: function(),
    uninstallFilter: function()
  },
  options: {
    address: "0x701c244b988a513c945973defa05de933b23fe1d",
    from: undefined,
    fromBlock: "0x3ba553",
    to: undefined,
    toBlock: "0x3bb18f",
    topics: ["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", null, null]
  },
  pollFilters: [],
  requestManager: {
    polls: {
      0xb7bd1f681db104e7a12e6aae38e23d03: {
        data: {...},
        id: "0xb7bd1f681db104e7a12e6aae38e23d03",
        callback: function(error, messages),
        uninstall: function()
      },
      0xe44a4b83cdf405188952e5a8f6c4250b: {
        data: {...},
        id: "0xe44a4b83cdf405188952e5a8f6c4250b",
        callback: function(error, messages),
        uninstall: function()
      }
    },
    provider: {
      newAccount: function(),
      send: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sendAsync: function github.com/ethereum/go-ethereum/console.(*bridge).Send-fm(),
      sign: function(),
      unlockAccount: function()
    },
    timeout: {},
    poll: function(),
    reset: function(keepIsSyncing),
    send: function(data),
    sendAsync: function(data, callback),
    sendBatch: function(data, callback),
    setProvider: function(p),
    startPolling: function(data, pollId, callback, uninstall),
    stopPolling: function(pollId)
  },
  formatter: function(),
  get: function(callback),
  stopWatching: function(callback),
  watch: function(callback)
}
> 
true
> 
> 
